// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AlabApi.Migrations
{
    [DbContext(typeof(AlabDbContext))]
    partial class AlabDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Carro", b =>
                {
                    b.Property<int>("CarroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarroId"));

                    b.Property<DateTime>("AnoFabricacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Especificacoes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("CarroId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ConjugeId")
                        .HasColumnType("integer");

                    b.Property<string>("Contrato")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Renda")
                        .HasColumnType("real");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClienteId");

                    b.HasIndex("ConjugeId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ClienteContratoCarro", b =>
                {
                    b.Property<int>("ClienteContratoCarroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteContratoCarroId"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ClienteContratoCarroId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContratoId");

                    b.ToTable("ClientesContratosCarros");
                });

            modelBuilder.Entity("Contrato", b =>
                {
                    b.Property<int>("ContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContratoId"));

                    b.Property<bool>("Cancelado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Plano")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuantidadeCarros")
                        .HasColumnType("integer");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("ContratoId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("ContratoPlano", b =>
                {
                    b.Property<int>("ContratoPlanoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContratoPlanoId"));

                    b.Property<int?>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("ContratoPlanoId");

                    b.HasIndex("ContratoId");

                    b.ToTable("ContratosPlanos");
                });

            modelBuilder.Entity("Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EnderecoId"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EnderecoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Plano", b =>
                {
                    b.Property<int>("PlanoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PlanoId"));

                    b.Property<int?>("CarroId")
                        .HasColumnType("integer");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("PlanoId");

                    b.HasIndex("CarroId");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.HasOne("Cliente", "Conjuge")
                        .WithMany()
                        .HasForeignKey("ConjugeId");

                    b.Navigation("Conjuge");
                });

            modelBuilder.Entity("ClienteContratoCarro", b =>
                {
                    b.HasOne("Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.Navigation("Cliente");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("ContratoPlano", b =>
                {
                    b.HasOne("Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Endereco", b =>
                {
                    b.HasOne("Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Plano", b =>
                {
                    b.HasOne("Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId");

                    b.Navigation("Carro");
                });
#pragma warning restore 612, 618
        }
    }
}
